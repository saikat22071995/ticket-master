{"version":3,"sources":["components/common/Home.js","components/users/UserRegister.js","components/users/UserLogin.js","config/config.js","action/cusomerAcion.js","components/customer/CustomerList.js","components/customer/CustomerShow.js","components/customer/CustomerForm.js","components/customer/CustomerNew.js","components/customer/CustomerEdit.js","components/department/DepartmentAdd.js","action/departmentAction.js","components/department/DepartmentList.js","action/employeeAction.js","components/employee/EmployeeList.js","components/employee/EmployeeForm.js","components/employee/EmployeeAdd.js","components/employee/EmployeeShow.js","components/department/DepartmentShow.js","components/tickets/Item.js","components/tickets/Item2.js","components/tickets/Tab.js","action/tickets.js","components/tickets/List.js","components/tickets/Form.js","components/tickets/New.js","components/tickets/Show.js","components/tickets/Edit.js","components/department/DepartmentEdit.js","components/employee/EmployeeEdit.js","App.js","reducer/customersReducer.js","reducer/departmentsReducer.js","reducer/employeesReducer.js","reducer/ticketsReducer.js","index.js","store/configureStore.js"],"names":["Home","props","Carousel","className","Item","src","alt","Caption","Container","Row","Col","UserRegister","handleSubmit","e","preventDefault","formdata","username","state","email","password","axios","post","then","response","console","log","data","hasOwnProperty","swal","message","history","push","catch","err","handleChange","setState","target","name","value","onSubmit","this","type","required","onChange","React","Component","UserLogin","formData","error","token","localStorage","setItem","window","location","reload","placeholder","Axios","create","baseURL","startRemoveCustomer","id","dispatch","title","text","icon","buttons","dangerMode","willDelete","delete","headers","getItem","payload","removeCustomer","startAddCustomer","errors","customer","addCustomer","_id","startEditCustomer","put","match","params","editCustomer","connect","customers","align","length","class","colSpan","map","key","mobile","to","onClick","find","_","isEmpty","style","width","backgroundColor","CustomerForm","user","user_id","get","defaultValue","CustomerNew","Object","keys","DepartmentAdd","handelChange","handelSubmit","Fragment","startAddDepartment","department","addDepartment","startRemoveDepartment","removeDepartment","startEditDepartment","departments","index","startRemoveEmployee","removeEmployee","startEditEmployee","employee","editEmployee","startAddEmployee","addEmployee","employees","EmployeeForm","dept","TicketItem","code","priorities","handleRemove","isResolved","handleClick","Button","color","TicketItem2","TicketTab","toggle","tab","activeTab","findCustomer","findDepartment","findEmployees","tickets","Nav","tabs","NavItem","NavLink","classnames","active","cursor","TabContent","TabPane","tabId","filter","ticket","Table","striped","emp","startRemoveTicket","removeTicket","startAddTicket","redirect","addTicket","startEditTicket","editTicket","startToggleTask","TicketsList","prevState","currentlyDisplayed","handleSearch","newlyDisplayed","includes","searchTerm","allTickets","completedTickets","Math","round","pendingTickets","priority","data2","role","temp","aria-label","calculate","Progress","md","chartType","height","options","pieHole","is3D","legendToggle","chart","TicketForm","employeesnew","emps","deptId","handleTicketSubmit","handleMultiChange","option","assign","label","Form","FormGroup","Label","htmlFor","Input","isMulti","tag","check","checked","TicketNew","TicketShow","TicketEdit","App","path","component","exact","CustomerList","DepartmentList","TicketList","TicketAdd","EmployeeList","EmployeeAdd","clear","CustomerEdit","DepartmentEdit","EmployeeEdit","CustomerShow","EmployeeShow","DepartmentShow","customersInitialState","customersReducer","action","departmentInitialState","departmentsReducer","initialState","employeesReducer","ticketsReducer","concat","store","createStore","combineReducers","ticketReducer","applyMiddleware","thunk","configureStore","getState","subscribe","setCustomers","setDepartments","setEmployee","setTickets","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e9418a6.chunk.js","sourcesContent":["import React from 'react'\nimport {Carousel, Container, Row, Col} from 'react-bootstrap'\nfunction Home(props){\n    return(\n        <div>\n           <Carousel className=\"carousel-fade\" >\n  <Carousel.Item >\n    <img\n      className=\"d-block w-100\"\n      src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(130).jpg\"\n      alt=\"First slide\"\n     \n    />\n    <Carousel.Caption>\n      <h3>All Your Tickets in One Place</h3>\n      <p>TicketManager gives you everything you need to manage, allocate and analyze your tickets and events.</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(46).jpg\"\n      alt=\"Third slide\"\n    />\n\n    <Carousel.Caption>\n      <h3>All Your Tickets in One Place</h3>\n      <p>TicketManager gives you everything you need to manage, allocate and analyze your tickets and events.</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(47).jpg\"\n      alt=\"Third slide\"\n    />\n\n    <Carousel.Caption>\n      <h3>All Your Tickets in One Place</h3>\n      <p>TicketManager gives you everything you need to manage, allocate and analyze your tickets and events.</p>\n    </Carousel.Caption>\n  </Carousel.Item>\n</Carousel>\n        <Container className=\".container\">\n            <Row>\n                <Col>\n                <h3>What we do</h3>\n                <p>Everything We Do</p>\n                <p>Ticket Management</p>\n                <p>Event Management</p>\n                <p>Sell Unused Tickets</p>\n                </Col>\n                <Col>\n                <h3>Who we help</h3>\n                <p>Sales</p>\n                <p>Marketing</p>\n                <p>Finance & Compilance</p>\n                <p>Ticket Administartion</p>\n                </Col>\n                <Col>\n                <h3>About us</h3>\n                <p>Careers</p>\n                <p>Awards & Recognition</p>\n                <p>News & Press</p>\n                <p>Blog</p>\n                </Col>\n                <Col>\n                <h3>Resources</h3>\n                <p>When To Use TicketManger</p>\n                <p>Testimonials</p>\n                <p>Success Stories</p>\n                <p>Customer Videos</p>\n                </Col>\n            </Row>\n        </Container>\n        </div>\n    )\n}\nexport default Home","import React from 'react'\nimport axios from 'axios'\nimport swal from 'sweetalert'\nclass UserRegister extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            username:'',\n            email:'',\n            password:''\n        }\n\n    }\n\n    handleSubmit=(e)=>{\n        e.preventDefault()\n        const formdata={\n            username:this.state.username,\n            email:this.state.email,\n            password:this.state.password\n        }\n        axios.post('http://localhost:3025/users/register',formdata)\n        .then((response)=>{\n            console.log(response.data)\n            console.log(this.props)\n            if(response.data.hasOwnProperty('errors')){\n                swal(response.data.message)\n            }\n            else{\n                swal('User Registered Successfully')\n                this.props.history.push('./login')\n            }\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n        \n    }\n    handleChange=(e)=>{\n        //console.log(e.target.name,e.target.value)\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n        \n    }\n\n    render(){\n        return(\n            <div>\n                <br />\n                <form onSubmit={this.handleSubmit} className=\"form-group\">\n                    <label>UserName:\n                    <input type=\"text\" className=\"form-control\" required={true} value={this.state.username} onChange={this.handleChange} name=\"username\"  />\n                    </label><br />\n                    <label>Email:\n                    <input type=\"email\" className=\"form-control\" required={true} value={this.state.email} onChange={this.handleChange} name=\"email\" />\n                    </label><br />\n                    <label>Password:&nbsp;\n                    <input type=\"password\" className=\"form-control\" required={true} value={this.state.password} onChange={this.handleChange} name=\"password\" />\n                    </label><br />\n                    <input type=\"submit\"  className=\"btn btn-primary\"/>\n                    </form>\n            </div>\n        )\n    }\n\n}\nexport default UserRegister","import React from 'react'\nimport axios from 'axios'\nimport swal from 'sweetalert'\nclass UserLogin extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            email:'',\n            password:''\n        }\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault()\n        const formData={\n            email:this.state.email,\n            password:this.state.password\n        }\n        \n        axios.post('http://localhost:3025/users/login',formData)\n        .then((response)=>{\n            //console.log('response',response)\n            if(response.data.error){\n                swal('Invalid UserName/Password')\n            }\n            else{\n                const token=response.data\n                //console.log(token)\n                localStorage.setItem('authToken',token)\n                this.props.history.push('/')\n                swal('Logged In Successfully')\n                window.location.reload()\n                \n            }\n        })\n\n    }\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <br /><br />\n                <h3 className=\"lead\">Login</h3>\n                <form className=\"form-group\" onSubmit={this.handleSubmit}>\n                    <label>\n                    <input type=\"text\" className=\"form-control\"\n                    placeholder=\"Email\" value={this.state.email} onChange={this.handleChange} name=\"email\" />\n                    </label><br />\n                    <label>\n                    <input type=\"password\" className=\"form-control\"\n                    placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} name=\"password\" />\n                    </label><br />\n                    <input type=\"submit\" className=\"btn btn-primary\"/>\n                </form>\n            </div>\n        )\n    }\n\n}\nexport default UserLogin","import Axios from 'axios'\nconst axios=Axios.create({\n    baseURL:'http://localhost:3025'\n})\nexport default axios","import axios from '.././config/config'\nimport swal from 'sweetalert'\n\nexport const setCustomers=(customers)=>{\n    return{\n        type:'SET_CUSTOMERS',\n        payload:customers\n    }\n}\n\nexport const startSetCustomers=()=>{\n    return (dispatch)=>{\n        axios.get('/customers', {\n                headers:{\n                    'x-auth':localStorage.getItem('authToken')\n                }\n            })\n            .then((response)=>{\n                const customers=response.data\n                console.log(customers)\n                dispatch(setCustomers(customers))\n            })\n            .catch((err)=>{\n                console.log(err)\n            })\n    }\n}\n\nexport const removeCustomer=(id)=>{\n    return {\n        type:'REMOVE_CUSTOMER',\n        payload:id\n    }\n}\n\nexport const startRemoveCustomer=(id)=>{\n    return (dispatch)=>{\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this Data!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((willDelete) => {\n            if (willDelete) {\n                axios.delete(`/customers/${id}`,{\n                    headers:{\n                        'x-auth':localStorage.getItem('authToken')\n                    }\n                })\n                .then(()=>{\n                    dispatch(removeCustomer(id))\n                    swal(\"Poof! Your Data has been deleted!\", {\n                    icon: \"success\",\n                  });\n                })\n               \n            } else {\n              swal(\"Your Data is safe!\");\n            }\n          })\n    }\n}\n\n\nexport const addCustomer=(customer)=>{\n    return {\n        type:'ADD_CUSTOMER',\n        payload:customer\n    }\n}\n\nexport const startAddCustomer=(formData,props)=>{\n    return (dispatch)=>{\n        axios.post('/customers',formData, {\n            headers:{\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            console.log(response)\n            if(response.data.hasOwnProperty('errors')){\n                swal(`${response.data.errors.message}`)\n            }else{\n                const customer=response.data\n                console.log(customer)\n                dispatch(addCustomer(customer))\n                props.history.push(`/customers/${customer._id}`)\n                swal('Customer Added Successfully')\n            }\n            \n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n}\n\nexport const editCustomer=(customer)=>{\n    return {\n        type:'EDIT_CUSTOMER',\n        payload:customer\n    }\n}\n\nexport const startEditCustomer=(formData,props)=>{\n    return (dispatch)=>{\n        axios.put(`/customers/${props.match.params.id}`,formData, {\n            headers:{\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            //console.log(response)\n            const customer=response.data\n            dispatch(editCustomer(customer))\n            swal('Customer Updated Successfully')\n            props.history.push(`/customers/${customer._id}`)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n    \n}","import React from 'react'\n//import axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {startRemoveCustomer} from '../../action/cusomerAcion'\n//import {Image,Container,Row,Col} from 'react-bootstrap'\nfunction CustomerList(props){\n\n    const handelRemove=(id)=>{\n        props.dispatch(startRemoveCustomer(id))\n    }\n        return(\n            <div className=\"container\" align=\"center\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                <br />\n                <p className=\"lead\">Listing customers--{props.customers.length}</p>\n                {\n                    props.customers.length==0?(\n                        <div class=\"d-flex justify-content-center\">\n                           <p className=\"lead\">No Data Available</p>\n                        </div>\n                    ):(\n                        <table className=\"table table-hover\">\n                    <thead className=\"\">\n                        <tr>\n                            <th>NAME</th>\n                            <th>EMAIL</th>\n                            <th>MOBILE</th>\n                            <th colSpan=\"2\">ACTION</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            props.customers.map((customer)=>{\n                                return(\n                                    <tr key={customer._id}> \n                                        <td>{customer.name}</td>\n                                        <td>{customer.email}</td>\n                                        <td>{customer.mobile}</td>\n                                        <td><Link className=\"btn btn-info\" to={`/customers/${customer._id}`}>Show</Link></td>\n                                        <td><button className=\"btn btn-danger\" onClick={()=>{\n                                            handelRemove(customer._id)\n                                        }}>Remove</button></td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n                    )\n                }\n                \n                </div>\n                <div className=\"col-md-6\"><br /><br />\n                <Link className=\"btn btn-primary\" to=\"/customers/new\">Add Customers</Link>\n                </div>\n                </div>\n            </div>\n        )\n}\nconst mapStateToProps=(state)=>{\n    return{\n        customers:state.customers\n    }\n}\nexport default connect(mapStateToProps)(CustomerList)","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\nfunction CustomerShow(props) {\n    let sty={width:'18rem',backgroundColor:'grey'}\n        return(\n            \n                <div>   \n                <br />\n                {\n                    !_.isEmpty(props.customer)  && (\n                        <div className=\"card\" style={sty}>\n                            <div className=\"card-body\">\n                                <p><b><u>Customer Show page</u></b></p>\n                                Name: {props.customer.name}<br />\n                                Email: {props.customer.email}<br />\n                                mobile: {props.customer.mobile}<br />\n                                <Link className=\"btn btn-primary\" to={`/customers/edit/${props.customer._id}`}>Edit</Link>\n                                &nbsp;<Link to=\"/customers\" className=\"btn btn-primary\">Back</Link>\n                            </div>\n                        </div>\n                    )\n                }\n                \n             </div>   \n            \n            \n        )\n}\nconst mapStateToProps=(state,props)=>{\n    return{\n        customer:state.customers.find(customer=>customer._id===props.match.params.id)\n    }\n}\nexport default connect(mapStateToProps)(CustomerShow)","import React from 'react'\nimport {Link} from 'react-router-dom'\n//import './customerForm.css'\nimport axios from 'axios'\nclass CustomerForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            name:props.name?props.name:'',\n            email:props.email?props.email:'',\n            mobile:props.mobile?props.mobile:'',\n            user_id:props.user_id?props.user_id:''\n        }\n    }\n\n    componentDidMount(){\n        axios.get('http://localhost:3025/users/account',{\n            headers:{\n                'x-auth':localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            console.log(response)\n            const user_id=response.data._id\n            this.setState({user_id})\n        })\n        .catch((error)=>{\n            console.log(error)\n        })\n    }\n\n    handleSubmit=(e)=>{\n        e.preventDefault()\n        const formData={\n            name:this.state.name,\n            email:this.state.email,\n            mobile:this.state.mobile,\n            user:this.state.user_id\n        }\n        this.props.handleSubmit(formData)\n    }\n\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"\" >\n                <form onSubmit={this.handleSubmit} className=\"form-group\">\n                    <label><input type=\"text\" className=\"form-control\" value={this.state.name} \n                    onChange={this.handleChange}\n                    name=\"name\" placeholder=\"Name\"\n                    required={true}/>\n                    </label><br />\n                    <label><input type=\"email\" className=\"form-control\" value={this.state.email} onChange={this.handleChange}\n                    name=\"email\" placeholder=\"Email\" required={true}/></label><br />\n                    <label><input type=\"text\" className=\"form-control\" value={this.state.mobile} onChange={this.handleChange}\n                    name=\"mobile\" placeholder=\"Phone Number\" required={true}/></label><br />\n                     <label>\n                        <input type=\"hidden\" className=\"form-control\" defaultValue={this.state.user_id} \n                        name=\"user_id\" onChange={this.handleChange} required={true} placeholder=\"User Id\"/>\n                    </label><br/>\n                    <input type=\"submit\" className=\"btn btn-primary\"/>\n                    &nbsp;<Link to=\"/customers\" className=\"btn btn-primary\">Back</Link>\n                </form>\n            </div>\n        )\n    }\n}\nexport default CustomerForm","import React from 'react'\n//import axios from 'axios'\nimport CustomerForm from './CustomerForm'\nimport {connect} from 'react-redux'\nimport {startAddCustomer} from '../../action/cusomerAcion'\nclass CustomerNew extends React.Component{\n   \n    handleSubmit=(formData)=>{\n       this.props.dispatch(startAddCustomer(formData,this.props)) \n    }\n    render()\n    {\n        return(\n            <div>\n                <br />\n                <h2>Add Customer</h2>\n                <CustomerForm handleSubmit={this.handleSubmit}/>\n            </div>\n        )\n    }\n}\nexport default connect()(CustomerNew)","import React from 'react'\nimport CustomerForm from './CustomerForm'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport { startEditCustomer } from '../../action/cusomerAcion'\n\nfunction CustomerEdit(props){\n\n    const handleSubmit=(formData)=>{\n        props.dispatch(startEditCustomer(formData,props))\n    }\n        return(\n            <div>\n                {\n                    !_.isEmpty(props.customer) && (\n                        <div>\n                            <br />\n                            <p className=\"lead\">Edit Customer -{props.customer.name}</p>\n                            \n                            {Object.keys(props.customer).length!==0 && <CustomerForm {...props.customer} handleSubmit={handleSubmit} />\n                            }\n                        </div>\n                    )\n                }\n            </div>\n        )\n}\nconst mapStateToProps=(state,props)=>{\n    return{\n        customer:state.customers.find(customer=>customer._id==props.match.params.id)\n    }\n}\nexport default connect(mapStateToProps)(CustomerEdit)","import React from 'react'\nimport axios from 'axios'\nclass DepartmentAdd extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            name:props.name?props.name:'',\n            user_id:props.user_id?props.user_id:''\n        }\n    }\n    componentDidMount(){\n        axios.get('http://localhost:3025/users/account',{\n            headers:{\n                'x-auth':localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            console.log(response)\n            const user_id=response.data._id\n            this.setState({user_id})\n        })\n        .catch((error)=>{\n            console.log(error)\n        })\n    }\n\n    handelChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    handelSubmit=(e)=>{\n        e.preventDefault()\n        const formData={\n            name:this.state.name,\n            user:this.state.user_id\n        }\n        this.props.handelSubmit(formData)\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <form className=\"form-group\" onSubmit={this.handelSubmit}>\n                    <p className=\"lead\">Add Department</p>\n                    <label className=\"lead\">\n                        <input type=\"text\" className=\"form-control\"\n                        placeholder=\"Department\" value={this.state.name} onChange={this.handelChange} name=\"name\"\n                        required={true}/>\n                        </label><br />\n                        <label>\n                        <input type=\"hidden\" className=\"form-control\" defaultValue={this.state.user_id} \n                        name=\"user_id\" onChange={this.handleChange} required={true} placeholder=\"User Id\"/>\n                    </label><br/>\n                        <input type=\"submit\" className=\"btn btn-primary\"/>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\nexport default DepartmentAdd","import axios from '.././config/config'\nimport swal from 'sweetalert'\n\nexport const setDepartments=(departments)=>{\n    return{\n        type:'SET_DEPARTMENTS',\n        payload:departments\n    }\n}\n\nexport const startSetDepartments=()=>{\n    return (dispatch)=>{\n        axios.get('/departments',{\n            headers:{\n                'x-auth':localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            const departments=response.data\n            //console.log(departments)\n            dispatch(setDepartments(departments))\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n}\n\nexport const addDepartment=(department)=>{\n    return {\n        type:'ADD_DEPARTMENT',\n        payload:department\n    }\n}\n\nexport const startAddDepartment=(formData)=>{\n    return (dispatch)=>{\n        axios.post('/departments',formData, {\n            headers:{\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            console.log(response)\n            if(response.data.hasOwnProperty('errors')){\n                swal(`${response.data.errors.message}`)\n            }else{\n                const department=response.data\n                dispatch(addDepartment(department))\n                swal('Department Added Successfully')\n            }\n            \n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n}\n\n\n\n\nexport const removeDepartment=(id)=>{\n    return {\n        type:'REMOVE_DEPARTMENT',\n        payload:id\n    }\n}\n\nexport const startRemoveDepartment=(id)=>{\n    return (dispatch)=>{\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this Data!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((willDelete) => {\n            if (willDelete) {\n                axios.delete(`/departments/${id}`,{\n                    headers:{\n                        'x-auth':localStorage.getItem('authToken')\n                    }\n                })\n                .then(()=>{\n                    dispatch(removeDepartment(id))\n                    swal(\"Poof! Your Data has been deleted!\", {\n                    icon: \"success\",\n                  });\n                })\n               \n            } else {\n              swal(\"Your Data is safe!\");\n            }\n          })\n    }\n}\n\n\n\nexport const editDepartment=(customer)=>{\n    return {\n        type:'EDIT_DEPARTMENT',\n        payload:customer\n    }\n}\n\nexport const startEditDepartment=(formData,props)=>{\n    return (dispatch)=>{\n        axios.put(`/departments/${props.match.params.id}`,formData, {\n            headers:{\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            //console.log(response)\n            const department=response.data\n            dispatch(editDepartment(department))\n            swal('department Updated Successfully')\n            props.history.push(`/departments/${department._id}`)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n    \n}","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport DepartmentAdd from './DepartmentAdd'\nimport {connect} from 'react-redux'\nimport {startAddDepartment} from '../../action/departmentAction'\nimport {startRemoveDepartment} from '../../action/departmentAction'\n\nfunction DepartmentList(props){\n\n   const handelSubmit=(formData)=>{\n        props.dispatch(startAddDepartment(formData))\n    }\n\n    \n   const handelRemove=(id)=>{\n        props.dispatch(startRemoveDepartment(id))\n    }\n\n        let sty={width:'80%'}\n        return(\n            <div className=\"overflow:auto\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                <p className=\"lead\">Department Listing--{props.departments.length}</p>\n                {\n                    props.departments.length==0?(\n                        <div class=\"d-flex justify-content-center\">\n                           <p className=\"lead\">No Data Available</p>\n                        </div>\n                    ):(\n                        <table className=\"table table-hover\" style={sty}>\n                            <thead>\n                                <tr>\n                                    <th>DEPARTMENT NAME</th>\n                                    <th colSpan=\"2\">ACTION</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    props.departments.map((department,index)=>{\n                                        return(\n                                            <tr key={index}>\n                                                <td>{department.name}</td>\n                                                <td><Link className=\"btn btn-primary\" to={`/departments/${department._id}`}>Show</Link></td>\n                                                <td><button className=\"btn btn-danger\" onClick={()=>{\n                                                    handelRemove(department._id)\n                                                }}>Remove</button></td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                            </tbody>\n                        </table> \n                    )\n                }\n                </div>\n                <br /><br />\n                <div className=\"col-md-6\">\n                    <br /><br /><br /> \n                    <DepartmentAdd handelSubmit={handelSubmit} align=\"right\"/>\n                    </div>\n                </div>\n            </div>\n        )\n}\nconst mapStateToProps=(state)=>{\n    return{\n        departments:state.departments\n    }\n}\nexport default connect(mapStateToProps)(DepartmentList)","import axios from '.././config/config'\nimport swal from 'sweetalert'\nexport const setEmployee=(employees)=>{\n    return{\n        type:'SET_EMPLOYEES',\n        payload:employees\n    }\n}\n\nexport const startSetEmployees=()=>{\n    return (dispatch)=>{\n        axios.get('/employees',{\n            headers:{\n                'x-auth':localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            const employees=response.data\n            console.log(employees)\n            dispatch(setEmployee(employees))\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n}\n\nexport const removeEmployee=(id)=>{\n    return {\n        type:'REMOVE_EMPLOYEE',\n        payload:id\n    }\n}\n\nexport const startRemoveEmployee=(id)=>{\n    return (dispatch)=>{\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this Data!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((willDelete) => {\n            if (willDelete) {\n                axios.delete(`/employees/${id}`,{\n                    headers:{\n                        'x-auth':localStorage.getItem('authToken')\n                    }\n                })\n                .then(()=>{\n                    dispatch(removeEmployee(id))\n                    swal(\"Poof! Your Data has been deleted!\", {\n                    icon: \"success\",\n                  });\n                })\n               \n            } else {\n              swal(\"Your Data is safe!\");\n            }\n          })\n    }\n}\n\nexport const editEmployee=(employee)=>{\n    return {\n        type:'EDIT_EMPLOYEE',\n        payload:employee\n    }\n}\n\nexport const startEditEmployee=(formData,props)=>{\n    return (dispatch)=>{\n        axios.put(`/employees/${props.match.params.id}`,formData, {\n            headers:{\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            //console.log(response)\n            const employee=response.data\n            console.log('employeedit',employee)\n            dispatch(editEmployee(employee))\n            swal('Employee Updated Successfully')\n            props.history.push(`/employees/${employee._id}`)\n            //window.location.reload()\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n}\n\nexport const addEmployee=(employee)=>{\n    return {\n        type:'ADD_EMPLOYEE',\n        payload:employee\n    }\n\n}\n\nexport const startAddEmployee=(formData,props)=>{\n    return (dispatch)=>{\n        axios.post('/employees',formData, {\n            headers:{\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            console.log(response)\n            if(response.data.hasOwnProperty('errors')){\n                swal(`${response.data.errors.message}`)\n            }else{\n                const employee=response.data\n                //console.log('AddEmployee',employee)\n                dispatch(addEmployee(employee))\n                props.history.push(`/employees/${employee._id}`)\n                swal('Employee Added Successfully')\n                window.location.reload()\n            }\n            \n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {startRemoveEmployee} from '../../action/employeeAction'\nfunction EmployeeList(props){\n   \n    const handelRemove=(id)=>{\n        props.dispatch(startRemoveEmployee(id))\n    }\n        return(\n            <div className=\"container\">\n                <br />\n                <p className=\"lead\">Listing Employees--{props.employees.length}</p>\n                {\n                    props.employees.length==0?(\n                        <div className=\"d-flex justify-content-center\">\n                           <p className=\"lead\">No Data Available</p>\n                        </div>\n                    ):(\n                        <table className=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>MOBILE</th>\n                                    <th>DEPARTMENT</th>\n                                    <th colSpan=\"2\">ACTIONS</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    props.employees.map((employee)=>{\n                                        return(\n                                            <tr key={employee._id}>\n                                                <td>{employee.name}</td>\n                                                <td>{employee.email}</td>\n                                                <td>{employee.mobile}</td>\n                                                <td>{employee.department.name}</td>\n                                                <td><Link to={`/employees/${employee._id}`} className=\"btn btn-info\">Show</Link></td>\n                                                <td><button className=\"btn btn-danger\" onClick={()=>{\n                                                    handelRemove(employee._id)\n                                                }}>Remove</button></td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                                </tbody>\n                            </table>\n                    )\n                }\n                \n                <Link to=\"/employees/new\" className=\"btn btn-primary\">Add Employee</Link>\n            </div>\n        )\n}\nconst mapStateToProps=(state)=>{\n    return{\n        employees:state.employees\n    }\n}\nexport default connect(mapStateToProps)(EmployeeList)","import React from 'react'\nimport axios from 'axios'\n\nclass EmployeeForm extends React.Component{\n    constructor(props){\n        super()\n        this.state={\n            name:props.name?props.name:'',\n            email:props.email?props.email:'',\n            mobile:props.mobile?props.mobile:'',\n            department:props.department?props.department._id:'',\n            departments:[],\n            user_id:props.user_id?props.user_id:''\n        }\n    }\n    componentDidMount(){\n        axios.get('http://localhost:3025/users/account',{\n            headers:{\n                'x-auth':localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            console.log(response)\n            const user_id=response.data._id\n            this.setState({user_id})\n        })\n        .catch((error)=>{\n            console.log(error)\n        })\n\n        axios.get('http://localhost:3025/departments', {\n            headers:{\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            const departments=response.data\n            this.setState({departments})\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n\n    handelChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n\n    handelSubmit=(e)=>{\n        e.preventDefault()\n        const formData={\n            name:this.state.name,\n            email:this.state.email,\n            mobile:this.state.mobile,\n            department:this.state.department,\n            user:this.state.user_id\n        }\n        this.props.handelSubmit(formData)\n\n    }\n\n\n    render(){\n        console.log(this.state.department)\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                <div className=\"col-md-6\">\n                <form className=\"form-group\" onSubmit={this.handelSubmit}>\n                    <label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.handelChange}\n                        placeholder=\"Name\" name=\"name\" />\n                    </label><br />\n                    <label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.email} onChange={this.handelChange}\n                        placeholder=\"Email\" name=\"email\" />\n                    </label><br />\n                    <label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.mobile} onChange={this.handelChange}\n                        placeholder=\"Mobile\" name=\"mobile\" />\n                    </label><br />\n                    \n                        <label><select className=\"form-control\" value={this.state.department} onChange={this.handelChange} name=\"department\"\n                        placeholder=\"Department\" >\n                        <option value=\"\">select</option>\n                        {\n                            this.state.departments.map((dept,index)=>{\n                                return(\n                                    <option key={index} value={dept._id}>{dept.name}</option>\n                                )\n                            })\n                        }\n                    </select></label><br />\n                    <label>\n                        <input type=\"hidden\" className=\"form-control\" defaultValue={this.state.user_id} \n                        name=\"user_id\" onChange={this.handleChange} required={true} placeholder=\"User Id\"/>\n                    </label><br/>\n                    <button  className=\"btn btn-primary\">Submit</button>\n                </form>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default EmployeeForm","import React from 'react'\nimport EmployeeForm from './EmployeeForm'\nimport{connect} from 'react-redux'\nimport { startAddEmployee } from '../../action/employeeAction'\n\nfunction EmployeeAdd(props){\n  const handelSubmit=(formData)=>{\n        props.dispatch(startAddEmployee(formData,props))\n    }\n\n        return(\n            <div>\n                <h2>Add Employee</h2>\n                <EmployeeForm handelSubmit={handelSubmit}/>\n            </div>\n        )\n}\nexport default connect()(EmployeeAdd)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport _ from 'lodash'\nfunction EmployeeShow(props){\n    \n    let sty={width:'20rem',backgroundColor:'grey'}\n        return(\n            <div >\n                <br />\n                {\n                    !_.isEmpty(props.employee) &&  (\n                        <div className=\"card\" style={sty}>\n                            <div className=\"card-body\">\n                            <p className=\"lead\"><b><u>Employee Show page</u></b></p>\n                            <label className=\"lead\">Name: {props.employee.name}</label><br />\n                            <label className=\"lead\">Email: {props.employee.email}</label><br />\n                            <label className=\"lead\">Mobile: {props.employee.mobile}</label><br />\n                            <label className=\"lead\">Department: {props.employee.department.name}</label><br />\n                            <Link to={`/employees/edit/${props.employee._id}`} className=\"btn btn-primary\">Edit</Link>\n                            &nbsp;<Link to=\"/employees\" className=\"btn btn-primary\">Back</Link>\n                            </div>\n                        </div>\n                    )\n                }\n             </div>   \n        )\n}\nconst mapStateToProps=(state,props)=>{\n    let employee=state.employees.find(employee=>employee._id==props.match.params.id)\n    //console.log('emp',employee)\n    if(employee){\n        return{\n            employee,\n            // department:state.departments.find(department=>department._id==employee.department)\n        }\n    }\n}\nexport default connect(mapStateToProps)(EmployeeShow)","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\nfunction DepartmentShow(props) {\n    let sty={width:'18rem',backgroundColor:'grey'}\n        return(\n            <div>\n                <br />\n                {\n                    !_.isEmpty(props.department) && (\n                        <React.Fragment>\n                             <div className=\"card\" style={sty}>\n                                <div className=\"card-body\">\n                                    <p><b><u>Department Show page</u></b></p>\n                                    <label className=\"lead\">Department_Name: {props.department.name}</label><br />\n                                    <Link to={`/departments/edit/${props.department._id}`} className=\"btn btn-primary\">Edit</Link>\n                                    &nbsp;<Link to=\"/departments\" className=\"btn btn-primary\">Back</Link>\n                                </div>\n                              </div>  \n                        </React.Fragment>\n                    )\n                }\n             </div>   \n        )\n}\nconst mapStateToProps=(state,props)=>{\n    return{\n        department:state.departments.find(department=>department._id==props.match.params.id)\n    }\n}\nexport default connect(mapStateToProps)(DepartmentShow)","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { Button } from 'reactstrap'\n// import {connect} from 'react-redux'\n\nfunction TicketItem(props){\n    console.log('props',props)\n    const {id,code,customer,employees,department,message,priorities,handleRemove,text,isResolved,handleClick} = props\n    return (\n        !isResolved &&\n        <tr>\n            <td>{code}</td>\n            <td>{customer}</td>\n            <td>{department}</td>\n            <td>{employees}</td>\n            <td>{message}</td>\n            <td>{priorities}</td>\n            {/* <Link className=\"btn btn-primary\" to={`/tickets/edit/${id}`}>Edit</Link> */}\n            <td><Link to={`/tickets/${id}`}><Button color=\"info\">Show</Button></Link></td>\n            <td><Button color=\"danger\" onClick = {()=>{\n                return handleRemove(id)\n            }}>{text}</Button></td>\n            <td><input type=\"checkbox\" onClick= {()=> {\n                return handleClick(id)\n            }}/></td>\n        </tr>\n    )\n}\n// const mapStateToProps=(state,props)=>{\n//     return{\n//         ticket:state.tickets.find(ticket=>ticket._id==props.match.params.id)\n//     }\n// }\n\nexport default TicketItem","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { Button } from 'reactstrap'\n\nfunction TicketItem2(props){\n    const {id,code,customer,department,employees,message,priorities,handleRemove,text,isResolved,handleClick} = props\n    return (\n        isResolved &&\n        <tr>\n            <td>{code}</td>\n            <td>{customer}</td>\n            <td>{department}</td>\n            <td>{employees}</td>\n            <td>{message}</td>\n            <td>{priorities}</td>\n            <td><Link to={`/tickets/${id}`}><Button color=\"info\">Show</Button></Link></td>\n            <td><Button color=\"danger\" onClick = {()=>{\n                return handleRemove(id)\n            }}>{text}</Button></td>\n            <td><input type=\"checkbox\" onClick= {()=> {\n                return handleClick(id)\n            }}/></td>\n        </tr>\n    )\n}\n\nexport default TicketItem2","import React from 'react'\n\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Table } from 'reactstrap'\nimport classnames from 'classnames'\n\nimport { connect } from 'react-redux'\n\nimport TicketItem from './Item'\nimport TicketItem2 from './Item2'\nimport _ from 'lodash'\n\nclass TicketTab extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeTab: '1'\n        }\n    }\n\n    toggle = (tab) => {\n        if (this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    }\n\n    findCustomer = (id) => {\n        return this.props.customers.find(customer => customer._id == id)\n    }\n\n    findDepartment = (id) => {\n        return this.props.departments.find(department => department._id == id)\n    }\n\n    findEmployees = (id) => {\n        return this.props.employees.find(employee => employee._id == id)\n    }\n\n    render() {\n        const { tickets, handleClick, handleRemove } = this.props\n        return (\n            <div>\n\n                {\n                    !_.isEmpty(this.props.customers) && !_.isEmpty(this.props.departments) &&\n                    !_.isEmpty(this.props.employees) && (\n                        <div>\n                            <Nav tabs className=\"mb-3\">\n                                <NavItem>\n                                    <NavLink\n                                        className={classnames({ active: this.state.activeTab === '1' })}\n                                        onClick={() => { this.toggle('1'); }}>\n                                        <div style={{ cursor: \"pointer\" }}>Pending</div>\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink\n                                        className={classnames({ active: this.state.activeTab === '2' })}\n                                        onClick={() => { this.toggle('2'); }}>\n                                        <div style={{ cursor: \"pointer\" }}>Completed</div>\n                                    </NavLink>\n                                </NavItem>\n\n                            </Nav>\n                            <TabContent activeTab={this.state.activeTab}>\n                                <TabPane tabId=\"1\">\n                                    {this.state.activeTab == 1 ?\n                                        <div>\n                                            <h2>Tickets - {tickets.filter(ticket => !ticket.isResolved).length}</h2>\n                                            <Table striped>\n                                                <thead>\n                                                    <tr>\n                                                        <th>Code No</th>\n                                                        <th>Customer</th>\n                                                        <th>Department</th>\n                                                        <th>Employees</th>\n                                                        <th>Message</th>\n                                                        <th>priorities</th>\n                                                        <th>Action</th>\n                                                        <th>Remove</th>\n                                                        <th>Complete</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {tickets.map((ticket) => {\n                                                        return <TicketItem\n                                                            key={ticket._id}\n                                                            id={ticket._id}\n                                                            code={ticket.code}\n                                                            customer={ticket.customer.name ? ticket.customer.name : this.findCustomer(ticket.customer).name}\n                                                            // department= {!ticket.customer?'Deleted': ticket.customer.name ? ticket.customer.name : this.findCustomer(ticket.customer) == undefined? 'Deleted': this.findCustomer(ticket.customer).name} \n                                                            // department= {!ticket.department?'Deleted':ticket.department.name ? ticket.department.name : this.findDepartment(ticket.department) == undefined? 'Deleted': this.findDepartment(ticket.department).name} \n                                                            department={ticket.department.name ? ticket.department.name : this.findDepartment(ticket.department).name}\n                                                            employees={ticket.employees[0].name ? ticket.employees.map((emp, index) => (index === ticket.employees.length - 1) ? `${emp.name}` : `${emp.name}, `) : ticket.employees.map((emp, index) => (index === ticket.employees.length - 1) ? `${this.findEmployees(emp).name}` : `${this.findEmployees(emp).name}, `)}\n                                                            message={ticket.message}\n                                                            priorities={ticket.priorities}\n                                                            handleRemove={handleRemove}\n                                                            text=\"remove\"\n                                                            isResolved={ticket.isResolved}\n                                                            handleClick={handleClick} />\n                                                    })}\n                                                </tbody>\n                                            </Table>\n                                        </div>\n                                        : null}\n                                </TabPane>\n                                <TabPane tabId=\"2\">\n                                    {this.state.activeTab == 2 ?\n                                        <div>\n                                            <h2>Tickets - {tickets.filter(ticket => ticket.isResolved).length}</h2>\n                                            <Table striped>\n                                                <thead>\n                                                    <tr>\n                                                        <th>Code No</th>\n                                                        <th>Customer</th>\n                                                        <th>Department</th>\n                                                        <th>Employees</th>\n                                                        <th>Message</th>\n                                                        <th>Priority</th>\n                                                        <th>Action</th>\n                                                        <th>Remove</th>\n                                                        <th>Not Complete</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {tickets.map((ticket) => {\n                                                        return <TicketItem2\n                                                            key={ticket._id}\n                                                            id={ticket._id}\n                                                            code={ticket.code}\n                                                            customer={ticket.customer.name ? ticket.customer.name : this.findCustomer(ticket.customer).name}\n                                                            department={ticket.department.name ? ticket.department.name : this.findDepartment(ticket.department).name}\n                                                            employees={ticket.employees[0].name ? ticket.employees.map((emp, index) => (index === ticket.employees.length - 1) ? `${emp.name}` : `${emp.name}, `) : ticket.employees.map((emp, index) => (index === ticket.employees.length - 1) ? `${this.findEmployees(emp).name}` : `${this.findEmployees(emp).name}, `)}\n                                                            message={ticket.message}\n                                                            priorities={ticket.priorities}\n                                                            handleRemove={handleRemove}\n                                                            text=\"remove\"\n                                                            isResolved={ticket.isResolved}\n                                                            handleClick={handleClick} />\n                                                    })}\n                                                </tbody>\n                                            </Table>\n                                        </div>\n                                        : null}\n                                </TabPane>\n                            </TabContent>\n\n                        </div>\n                    )\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        customers: state.customers,\n        departments: state.departments,\n        employees: state.employees\n    }\n\n}\n\nexport default connect(mapStateToProps)(TicketTab)","import axios from '../config/config'\n\nimport swal from 'sweetalert'\n\nexport const setTickets = (tickets) => {\n    return {\n        type: 'SET_TICKETS',\n        payload: tickets\n    }\n}\n\nexport const startSetTickets = () => {\n    return (dispatch) => {\n        axios.get('/tickets',{\n                    headers: {\n                        'x-auth': localStorage.getItem('authToken')\n                    }\n                })\n            .then(response=>{\n                const tickets = response.data\n                dispatch(setTickets(tickets))\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n\n    }\n}\n\nexport const removeTicket = (ticket) => {\n    return {\n        type: 'REMOVE_TICKET',\n        payload: ticket\n    }\n}\n\nexport const startRemoveTicket = (id) => {\n    return (dispatch) => {\n        axios.delete(`/tickets/${id}`,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response=>{\n            const ticket = response.data\n            dispatch(removeTicket(ticket))\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n}\n\nexport const addTicket = (ticket) => {\n    return {\n        type: 'ADD_TICKET',\n        payload: ticket\n    }\n}\n\nexport const startAddTicket = (ticket,redirect) => {\n    return (dispatch) => {\n        axios.post('/tickets',ticket,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response=>{\n            if(response.data.errors){\n                swal(`${response.data.message}`,\"\",\"error\")\n            } else {\n                const ticket = response.data\n                \n                dispatch(addTicket(ticket))\n                redirect()\n            }\n        })\n    }\n}\n\nexport const editTicket = (ticket) => {\n    return {\n        type: 'EDIT_TICKET',\n        payload: ticket\n    }\n}\n\nexport const startEditTicket = (ticket,redirect) => {\n    return(dispatch) => {\n        axios.put(`/tickets/edit/${ticket.id}`,ticket,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response => {\n            console.log(response.data)\n            if (response.data.errors) {\n                swal(`${response.data.message}`,\"\",\"error\")\n            } else {\n                const ticket = response.data\n                redirect()\n                dispatch(editTicket(ticket))\n            }\n        })\n    }\n}\n\nexport const toggleTask = (ticket) => {\n    return {\n        type: 'TOGGLE_TASK',\n        payload: ticket\n    }\n}\n\nexport const startToggleTask = (id,isResolved) => {\n    return(dispatch) => {\n        axios.put(`/tickets/edit/${id}`,{isResolved:!isResolved},{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n            dispatch(toggleTask(id))\n        \n    }\n}\n\nexport const searchTicket = (search) => {\n    return {\n        type: 'SEARCH_TICKET',\n        payload: search\n    }\n}\n\nexport const updateTicketCustomer = (customer) => {\n    return {\n        type: 'UPDATE_TICKET_CUSTOMER',\n        payload: customer\n    }\n}\n\nexport const updateTicketDepartment = (department) => {\n    return {\n        type: 'UPDATE_TICKET_DEPARTMENT',\n        payload: department\n    }\n}\n// export const updateTicketEmployee = (employee) => {\n//     return {\n//         type: 'UPDATE_TICKET_EMPLOYEE',\n//         payload: employee\n//     }\n// }","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport TicketTab from './Tab'\n\nimport { Container, Row, Col } from 'reactstrap'\n\nimport Chart from 'react-google-charts'\nimport swal from 'sweetalert'\nimport {Progress} from 'reactstrap'\n\nimport {connect}  from 'react-redux'\nimport {startToggleTask} from '../../action/tickets'\nimport { startRemoveTicket} from '../../action/tickets'\n\n\n\n\n\n class TicketsList extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n\n            searchTerm:'',\n            currentlyDisplayed: this.props.tickets\n        }\n    }\n\n    findDepartment = (id) => {\n        return this.props.departments.find(dept => dept._id == id)\n    }\n\n    handleRemove = (id) => {\n        swal({\n            title: \"Are you sure you want to Delete?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((willDelete) => {\n            if (willDelete) {\n              swal(\"Successfully Deleted\", {\n                icon: \"success\",\n              });\n              this.props.dispatch(startRemoveTicket(id))\n              this.setState(prevState=>({\n                currentlyDisplayed: prevState.currentlyDisplayed.filter(ticket=>ticket._id != id)\n            }))\n                } \n             })\n    }\n\n    handleClick = (id) =>{\n        const ticket = this.props.tickets.find(ticket=>ticket._id == id)\n        const isResolved = ticket.isResolved\n\n        this.props.dispatch(startToggleTask(id,isResolved))\n    }\n\n    handleSearch = (e) => {\n\n        let newlyDisplayed = this.props.tickets.filter(ticket=>ticket.code.includes(e.target.value))\n        this.setState({\n            searchTerm: e.target.value,\n            currentlyDisplayed: newlyDisplayed\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n    } \n\n    calculate(){\n        const allTickets = this.props.tickets.length\n        const completedTickets = this.props.tickets.filter(ticket=>ticket.isResolved).length\n        const percent = Math.round((completedTickets/allTickets)*100)\n        return percent\n    }\n\n    render(){\n        const pendingTickets = this.props.tickets.filter(ticket=>!ticket.isResolved)\n        const high = pendingTickets.filter(ticket=>ticket.priority == 'High').length\n        const medium = pendingTickets.filter(ticket=>ticket.priority == 'Medium').length\n        const low = pendingTickets.filter(ticket=>ticket.priority == 'Low').length\n        const data = [\n            [\"Priority\", \"Tickets per Category\"],\n            [\"High\", high],\n            [\"Medium\",medium],\n            [\"Low\", low]\n          ]\n        const options = {\n            title: \"Ticket Priority\",\n            pieHole: 0.4,\n            is3D: false\n          }\n\n        const data2 = []\n        const Header = [\"Departments\", \"Tickets\", { role: \"style\" }]\n        data2.push(Header)\n            this.props.departments.map(dept=>{\n                    const temp = []\n                    temp.push(`${dept.name}`)\n                    temp.push(pendingTickets.filter(ticket=>(ticket.department.name? ticket.department.name : this.findDepartment(ticket.department).name) == dept.name).length)\n                    temp.push(\"blue\")\n                    data2.push(temp)\n            })\n\n        return (\n            <div>\n                 <form className=\"form-inline float-right mt-3 ml-3\" onSubmit={this.handleSubmit}>\n                    <input className=\"form-control mr-sm-2\" type=\"search\"  placeholder=\"Search Code\" aria-label=\"Search\" onChange={this.handleSearch}/>\n                </form>\n                {\n                    this.props.tickets.length==0?(\n                        <div className=\"d-flex justify-content-center\">\n                            <p className=\"lead\">No Data Available</p>\n                        </div>\n                    ):(\n                        <div>\n                            <TicketTab tickets= {this.state.currentlyDisplayed.length == 0? this.props.tickets : this.state.currentlyDisplayed} handleClick={this.handleClick} handleRemove={this.handleRemove}/>\n\n                            <Link to =\"/tickets/new\" className=\"btn btn-primary\">Add Ticket</Link>\n\n                            <div className=\"text-center\">Completed Tickets: {this.calculate()}%</div>\n                            <Progress className=\"mb-5\" striped value={`${this.calculate()}`}/>\n\n                            <h3 className=\"d-flex justify-content-center mb-3\">Data on Pending Tickets</h3>\n                            <Container>\n                                <Row>\n                                <Col md=\"6\">\n                                <Chart\n                                chartType=\"ScatterChart\"\n                                width=\"100%\"\n                                height=\"400px\"\n                                data={data}\n                                options={options}\n                                legendToggle\n                                />\n                                </Col>\n                                \n                                <Col md=\"6\">\n                                <Chart\n                                chartType=\"Bar\"\n                                width=\"100%\"\n                                height=\"400px\"\n                                data={data2}\n                                options={{\n                                    chart: {\n                                        title: 'Tickets By Department',\n                                    }\n                                }}\n                                />\n                                </Col> \n                            </Row>\n                            </Container>\n\n            </div>\n                                                )\n                                            }\n\n                   \n\n                                        </div>\n                                    )\n                                    \n                                }\n                            }\n\nconst mapsStateToProps = (state) => {\n    return {\n        tickets: state.tickets,\n        departments: state.departments\n    }\n}\n\nexport default connect(mapsStateToProps)(TicketsList)","import React from 'react'\nimport axios from '../../config/config'\nimport Select from 'react-select'\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap'\n\nimport {connect}  from 'react-redux'\n\n\nclass TicketForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            code: props.ticket? props.ticket.code: '',\n            customer: props.ticket? props.ticket.customer._id: '',\n            department: props.ticket? props.ticket.department._id: '',\n            emps: [],\n            employee: props.ticket? props.ticket.employees: [],\n            employeesnew: [],\n            message: props.ticket? props.ticket.message: '',\n            priorities: props.ticket? props.ticket.priorities: '',\n            user_id:props.user_id?props.user_id:''\n        }\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n\n        if(e.target.name === 'department'){\n                 this.setState({\n                employeesnew:this.state.emps.filter(employee=>employee.deptId === e.target.value )\n            })\n            console.log('employeesnew', this.state.employeesnew)\n        }\n\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault()\n        const formData = {\n            code: this.state.code,\n            customer: this.state.customer,\n            department: this.state.department,\n            employees: this.state.employee,\n            message: this.state.message,\n            priorities: this.state.priorities,\n            user:this.state.user_id\n        }\n        this.props.ticket && (formData.id = this.props.ticket._id)\n        this.props.handleTicketSubmit(formData)\n        console.log(formData)\n    }\n\n    // componentWillReceiveProps(nextProps){\n    //     if(nextProps.ticket !== undefined){\n    //     const {code,customer,department,employee,message,priorities} = nextProps.ticket\n    //     this.setState({code,customer,department,employee,message,priorities})\n    //     }\n    // }\n\n    componentDidMount(){\n\n        axios.get('/employees',{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response=>{\n            const employees = response.data\n            let emps = []\n            employees.map(employee=>{\n                return (\n                    emps.push({\n                        id: employee._id,\n                        value: employee._id,\n                        label: employee.name,\n                        deptId: employee.department._id,\n                    })\n                )\n            })\n            this.setState({emps})\n        }) \n        \n        \n        axios.get('http://localhost:3025/users/account',{\n            headers:{\n                'x-auth':localStorage.getItem('authToken')\n            }\n        })\n        .then((response)=>{\n            console.log(response)\n            const user_id=response.data._id\n            this.setState({user_id})\n        })\n        .catch((error)=>{\n            console.log(error)\n        })\n    }\n    handleMultiChange = (option) => {\n        console.log('option', option)\n        if(option !== null){\n            this.setState(() => {\n                return {\n                employee: option.map(option=>Object.assign(option.id))\n             }\n         })\n         console.log('employee', this.state.employee)\n         console.log('option', option)\n        }\n    }\n    \n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                <div className=\"col-md-6\">\n                <Form onSubmit={this.handleSubmit}>\n\n                <FormGroup>\n                    <Label htmlFor =\"code\">Code</Label>\n                    <Input type=\"text\" id=\"code\" value={this.state.code} onChange={this.handleChange} name=\"code\"/>\n                </FormGroup>\n                \n                <FormGroup>\n                    <Label htmlFor=\"customer\">Customer</Label>\n                    <Input type=\"select\" id=\"customer\" value={this.state.customer} onChange={this.handleChange} name=\"customer\">\n                    <option value=\"\">select</option>\n                        {this.props.customers.map(customer=>{\n                             return <option key={customer._id} value={customer._id}>{customer.name} </option>\n                        })}\n                    </Input>\n                </FormGroup>\n                \n                <FormGroup>\n                    <Label htmlFor=\"department\">Department</Label>\n                    <Input type=\"select\" id=\"department\" value={this.state.department} onChange={this.handleChange} name=\"department\">\n                    <option value=\"\">select</option>\n                        {this.props.departments.map(department=>{\n                             return <option key={department._id} value={department._id}>{department.name}</option> \n                        })}\n                    </Input>\n                </FormGroup>\n\n                <label>\n                        Employees\n                </label>\n                            <Select\n                                name=\"employee\"\n                                placeholder=\"Select\"\n                                // value={this.state.employee}\n                                options={this.state.employeesnew}\n                                onChange={this.handleMultiChange}\n                                isMulti\n                            />\n                <br/>\n                <FormGroup>\n                <Label htmlFor=\"message\">Message</Label>\n                    <Input type=\"textarea\" value={this.state.message} onChange={this.handleChange} name=\"message\"/>\n                </FormGroup>\n\n        <FormGroup tag=\"fieldset\">\n        <legend>priorities</legend>\n        <FormGroup check>\n          <Label check>\n            <Input type=\"radio\" value=\"High\" checked= {this.state.priorities===\"High\"} onChange={this.handleChange} name=\"priorities\"/>{' '}\n            High\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input type=\"radio\" value=\"Medium\" checked= {this.state.priorities===\"Medium\"} onChange={this.handleChange} name=\"priorities\"/>{' '}\n            Medium\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input type=\"radio\" value=\"Low\" checked= {this.state.priorities===\"Low\"} onChange={this.handleChange} name=\"priorities\"/>{' '}\n            Low\n          </Label>\n        </FormGroup>\n      </FormGroup>\n                 <br/>\n\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </Form>\n            </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        customers: state.customers,\n        departments: state.departments,\n        employees: state.employees\n    }\n}\n\nexport default connect(mapStateToProps)(TicketForm)","import React from 'react'\n\nimport TicketForm from './Form'\n\nimport {connect} from 'react-redux'\nimport {startAddTicket} from '../../action/tickets'\n\nclass TicketNew extends React.Component{\n    handleTicketSubmit = (ticket) => {\n\n        const redirect = () => this.props.history.push('/tickets')\n        this.props.dispatch(startAddTicket(ticket,redirect))\n        \n    }\n\n    render(){\n        return (\n            <div>\n                <h2>Add Ticket</h2>\n                <TicketForm handleTicketSubmit = {this.handleTicketSubmit}/>\n            </div>\n        )\n    }\n}\n\n\n\nexport default connect()(TicketNew)","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\n\n class TicketShow extends React.Component{\n\n    findCustomer =  (id) => {\n        return this.props.customers.find(customer => customer._id == id )\n    }\n\n    findDepartment = (id) => {\n        return this.props.departments.find(department => department._id == id)\n    }\n\n    findEmployees = (id) => {\n        return this.props.employees.find(employee => employee._id == id)\n    }\n\n    render(){\n        let sty={width:'25rem',backgroundColor:'grey'}\n        return (\n            <div>\n                <br/>\n                {this.props.ticket  && (\n                    <div className=\"card\" style={sty}>\n                    <div className=\"card-body\">\n                    <h2>Code Number - {this.props.ticket.code}</h2>\n                    \n                    <p className=\"lead\">Customer -{this.props.ticket.customer.name? this.props.ticket.customer.name : this.findCustomer(this.props.ticket.customer).name}  </p>\n                    <p className=\"lead\">Employees - {this.props.ticket.employees[0].name ? this.props.ticket.employees.map((emp,index)=>(index===this.props.ticket.employees.length-1)?`${emp.name}`: `${emp.name}, `): this.props.ticket.employees.map((emp,index)=>(index===this.props.ticket.employees.length-1)?`${this.findEmployees(emp).name}`: `${this.findEmployees(emp).name}, `)} </p>\n                    <p className=\"lead\">Department - {this.props.ticket.department.name? this.props.ticket.department.name: this.findDepartment(this.props.ticket.department).name}</p>\n                    <p className=\"lead\">Message - {this.props.ticket.message}</p>\n                    <p className=\"lead\">Priority - {this.props.ticket.priorities}</p>\n                    <Link className=\"btn btn-primary\" to={`/tickets/edit/${this.props.ticket._id}`}>Edit</Link>\n                    </div>\n                    </div>\n                )}\n                \n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        ticket: state.tickets.find(ticket=> ticket._id == id ),\n        employees: state.employees,\n        customers: state.customers,\n        departments: state.departments,\n    }\n}\n\nexport default connect(mapStateToProps)(TicketShow)","import React from 'react'\nimport TicketForm from './Form'\n\nimport {connect} from 'react-redux'\nimport {startEditTicket} from '../../action/tickets'\n\nclass TicketEdit extends React.Component{\n    handleTicketSubmit = (ticket) => {\n\n        const redirect = () => this.props.history.push(`/tickets/${ticket.id}`)\n        this.props.dispatch(startEditTicket(ticket,redirect))\n        \n    }\n    render(){\n        return (\n            <div>\n                {this.props.ticket && (\n                    <div>\n                        <h2>Edit Ticket</h2>\n                         {this.props.ticket && <TicketForm ticket = {this.props.ticket} handleTicketSubmit = {this.handleTicketSubmit}/>}\n                     </div>\n                )}\n               \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        ticket: state.tickets.find(ticket=>ticket._id == id)\n    }\n}\n\nexport default connect(mapStateToProps)(TicketEdit)\n\n","import React from 'react'\nimport DepartmentAdd from './DepartmentAdd'\nimport {connect} from 'react-redux'\nimport {startEditDepartment} from '../../action/departmentAction'\nimport _ from 'lodash'\n\nfunction DepartmentEdit(props){\n\n    const handelSubmit=(formData)=>{\n       props.dispatch(startEditDepartment(formData,props))\n    }\n        return(\n            <div>\n                {\n                    !_.isEmpty(props.department) &&(\n                        <div>\n                            {Object.keys(props.department).length!==0 && <DepartmentAdd {...props.department}\n                            handelSubmit={handelSubmit}/>}\n                        </div>\n                    )\n                }\n            </div>\n        )\n}\nconst mapStateToProps=(state,props)=>{\n    return{\n        department:state.departments.find(department=>department._id==props.match.params.id)\n    }\n}\nexport default connect(mapStateToProps)(DepartmentEdit)","import React from 'react'\nimport { connect } from 'react-redux'\nimport EmployeeForm from './EmployeeForm'\nimport { startEditEmployee } from '../../action/employeeAction'\nimport _ from 'lodash'\nfunction EmployeeEdit(props) {\n\n    const handelSubmit = (formData) => {\n        props.dispatch(startEditEmployee(formData,props))\n    }\n\n    return (\n        <div>\n            {\n                !_.isEmpty(props.employee) && (\n                    <div>\n\n                        {Object.keys(props.employee).length !== 0 && <EmployeeForm {...props.employee} handelSubmit={handelSubmit} />}\n                    </div>\n                )\n            }\n\n\n        </div>\n    )\n}\nconst mapStateToProps = (state, props) => {\n    return {\n        employee: state.employees.find(employee => employee._id == props.match.params.id)\n    }\n}\nexport default connect(mapStateToProps)(EmployeeEdit)","import React from 'react';\nimport {BrowserRouter,Route,Link,Switch} from 'react-router-dom'\nimport Home from './components/common/Home'\n//import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport UserRegister from './components/users/UserRegister';\nimport UserLogin from './components/users/UserLogin';\nimport CustomerList from './components/customer/CustomerList';\nimport CustomerShow from './components/customer/CustomerShow';\nimport CustomerNew from './components/customer/CustomerNew';\nimport CustomerEdit from './components/customer/CustomerEdit';\nimport DepartmentList from './components/department/DepartmentList'\nimport EmployeeList from './components/employee/EmployeeList'\nimport EmployeeAdd from './components/employee/EmployeeAdd'\nimport EmployeeShow from './components/employee/EmployeeShow';\nimport DepartmentShow from './components/department/DepartmentShow'\nimport TicketList from './components/tickets/List'\nimport TicketAdd from './components/tickets/New'\nimport TicketShow from './components/tickets/Show'\nimport TicketEdit from './components/tickets/Edit'\nimport DepartmentEdit from './components/department/DepartmentEdit'\nimport EmployeeEdit from './components/employee/EmployeeEdit'\n\nfunction App(props) {\n  function logout(){\n    localStorage.clear()\n    {window.location.assign('/users/login')}\n  }\n  return (\n    <BrowserRouter>\n   <div className=\"container\">\n   <nav className=\"navbar navbar-dark bg-dark\">\n   <nav className=\"mr-auto\">\n    {\n      localStorage.getItem('authToken')?(\n        <div>\n          <Link className=\"navbar-brand\" to=\"/\">Home</Link>\n          <Link className=\"navbar-brand\" to=\"/customers\"> Customers </Link>\n          <Link className=\"navbar-brand\" to=\"/departments\"> Department</Link> \n          <Link className=\"navbar-brand\" to=\"/employees\"> Employee</Link>  \n          <Link className=\"navbar-brand\" to=\"/tickets\"> Tickets </Link> \n          <Link className=\"navbar-brand\" to=\"/logout\"> Logout</Link> \n          {/* <Link to=\"/logout\"> Logout</Link> */}\n        </div>\n      ):(\n        <div>\n        <Link className=\"navbar-brand\" to=\"/\">Home</Link>\n        <Link className=\"navbar-brand\" to=\"/users/register\"> Register </Link>\n        <Link className=\"navbar-brand\" to=\"/users/login\"> Login</Link> \n        </div>  \n      )\n    }\n    </nav>\n    </nav>\n    <Switch>\n    <Route path=\"/\" component={Home} exact={true}/>\n    <Route path=\"/users/register\" component={UserRegister}/>\n    <Route path=\"/users/login\" component={UserLogin}/>\n    <Route path=\"/customers\" component={CustomerList} exact={true}/>\n    <Route path=\"/departments\" component={DepartmentList} exact={true}/>\n    <Route path=\"/tickets\" component={TicketList} exact={true}/>\n    <Route path=\"/customers/new\" component={CustomerNew} />\n    <Route path=\"/tickets/new\" component={TicketAdd} />\n    <Route path=\"/employees\" component={EmployeeList} exact={true}/>\n    <Route path=\"/employees/new\" component={EmployeeAdd} exact={true}/>\n    <Route path=\"/logout\" component={logout} />\n    <Route path=\"/customers/edit/:id\" component={CustomerEdit}/>\n    <Route path=\"/departments/edit/:id\" component={DepartmentEdit}/>\n    <Route path=\"/employees/edit/:id\" component={EmployeeEdit}/>\n    <Route path=\"/tickets/edit/:id\" component={TicketEdit}/>\n    <Route path=\"/customers/:id\" component={CustomerShow} />\n    <Route path=\"/employees/:id\" component={EmployeeShow} />\n    <Route path=\"/departments/:id\" component={DepartmentShow} />\n    <Route path=\"/tickets/:id\" component={TicketShow} />\n    \n    </Switch>\n     </div>\n     </BrowserRouter>\n  );\n}\n\nexport default App;\n","const customersInitialState=[]\n\nconst customersReducer=(state=customersInitialState,action)=>{\n    switch(action.type){\n        case 'SET_CUSTOMERS':{\n            return [...action.payload]\n        }\n        case 'REMOVE_CUSTOMER':{\n            return state.filter(customer=>customer._id!==action.payload)\n        }\n        case 'ADD_CUSTOMER':{\n            return [...state,action.payload]\n        }\n        case 'EDIT_CUSTOMER':{\n            return state.map(customer=>{\n                if(customer._id==action.payload._id){\n                    return {...action.payload}\n                }else{\n                    return {...customer}\n                }\n            })\n        }\n        default:{\n            return [...state]\n        }\n    }\n}\n\nexport default customersReducer","const departmentInitialState=[]\n\nconst departmentsReducer=(state=departmentInitialState,action)=>{\n    switch(action.type){\n        case 'SET_DEPARTMENTS':{\n            return [...action.payload]\n        }\n        case 'ADD_DEPARTMENT':{\n            return [...state,action.payload]\n        }\n        case 'REMOVE_DEPARTMENT':{\n            return state.filter(department=>department._id!=action.payload)\n        }\n        case 'EDIT_DEPARTMENT':{\n            return state.map(department=>{\n                if(department._id==action.payload._id){\n                    return {...action.payload}\n                }else{\n                    return {...department}\n                }\n            })\n        }\n        default:{\n            return [...state]\n        }\n    }\n}\n\nexport default departmentsReducer","const initialState=[]\n\nconst employeesReducer=(state=initialState,action)=>{\n    switch(action.type){\n        case 'SET_EMPLOYEES':{\n            return [...action.payload]\n        }\n        case 'REMOVE_EMPLOYEE':{\n            return state.filter(employee=>employee._id!=action.payload)\n        }\n        case 'EDIT_EMPLOYEE':{\n            return state.map(employee=>{\n                if(employee._id==action.payload._id){\n                    return {...action.payload}\n                }else{\n                    return {...employee}\n                }\n            })\n        }\n        case 'ADD_EMPLOYEE':{\n            return [...state,action.payload]\n        }\n        default:{\n            return [...state]\n        }\n    }\n}\nexport default employeesReducer","const ticketsReducer = (state=[],action) => {\n    switch(action.type){\n        case 'SET_TICKETS': return [].concat(state,action.payload)\n\n        case 'REMOVE_TICKET': return state.filter(ticket=>{\n            return ticket._id != action.payload._id\n        })\n\n        case 'ADD_TICKET': return [...state,action.payload]\n\n        case 'EDIT_TICKET': return state.map(ticket=>{\n                                    if(ticket._id == action.payload._id){\n                                            return Object.assign({},ticket,action.payload)\n                                    } else {\n                                    return Object.assign({},ticket)\n                                    }\n                             })\n        case 'TOGGLE_TASK': return state.map(ticket=>{\n                                    if(ticket._id == action.payload){\n                                        console.log('isResolved',ticket.isResolved)\n                                        ticket.isResolved = !ticket.isResolved\n                                        return ticket\n                                    } else {\n                                        return ticket\n                                    }\n                                    \n        })\n\n        case 'UPDATE_TICKET_CUSTOMER': {\n            return state.map(ticket => {\n                if(ticket.customer._id == action.payload._id) {\n                    ticket.customer = action.payload._id \n                    return {...ticket}\n                } else {\n                    return {...ticket}\n                }\n            })\n        }\n\n        case 'UPDATE_TICKET_DEPARTMENT': {\n            return state.map(ticket=>{\n                if(ticket.department._id == action.payload._id){\n                    ticket.department = action.payload._id\n                    return {...ticket}\n                } else {\n                    return {...ticket}\n                }\n            }) \n        }\n\n        // case 'UPDATE_TICKET_EMPLOYEE': {\n        //     return state.map(ticket=>{\n        //             return ticket.employees.map(emp=>{\n        //                 if(emp._id == action.payload._id){\n        //                   emp = action.payload._id\n        //                   return ticket\n        //                 } else {\n        //                   return ticket\n        //                 }\n        //             })           \n        //     }) \n           \n        // }\n\n        case 'FILTER_SEARCH': return state.filter(ticket=>ticket.code.includes(action.payload))\n\n        default: return [...state]\n    }\n}\n\nexport default ticketsReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from 'react-redux'\nimport configureStore from './store/configureStore'\nimport {startSetCustomers} from './action/cusomerAcion'\nimport {startSetDepartments} from './action/departmentAction'\nimport {startSetEmployees} from './action/employeeAction'\nimport {startSetTickets} from './action/tickets'\n//import {startSetUser} from './action/user'\n\nconst store=configureStore()\nconsole.log(store.getState())\nstore.subscribe(()=>{\n    console.log(store.getState())\n})\n\nif(localStorage.getItem('authToken')){\n    store.dispatch(startSetCustomers())\n    store.dispatch(startSetDepartments())\n    store.dispatch(startSetEmployees())\n    store.dispatch(startSetTickets())\n    //store.dispatch(startSetUser())\n}\nconst jsx=(\n    <div>\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    </div>\n)\n\nReactDOM.render(jsx, document.getElementById('root'));\n\n","import {createStore,combineReducers,applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport customersReducer from '../reducer/customersReducer'\nimport departmentsReducer from '../reducer/departmentsReducer'\nimport employeesReducer from '../reducer/employeesReducer'\nimport ticketReducer from '../reducer/ticketsReducer'\nconst configureStore=()=>{\n    const store=createStore(combineReducers({\n        customers:customersReducer,\n        departments:departmentsReducer,\n        employees:employeesReducer,\n        tickets:ticketReducer\n    }),applyMiddleware(thunk))\n    return store\n}\n\nexport default configureStore"],"sourceRoot":""}